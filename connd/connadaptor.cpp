/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c ConnAdaptor -a connadaptor.h:connadaptor.cpp com.jollamobile.Connectiond.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "connadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ConnAdaptor
 */

ConnAdaptor::ConnAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ConnAdaptor::~ConnAdaptor()
{
    // destructor
}

bool ConnAdaptor::askRoaming() const
{
    // get the value of property askRoaming
    return qvariant_cast< bool >(parent()->property("askRoaming"));
}

void ConnAdaptor::setAskRoaming(bool value)
{
    // set the value of property askRoaming
    parent()->setProperty("askRoaming", QVariant::fromValue(value));
}

void ConnAdaptor::connectToType(const QString &in0)
{
    // handle method call com.jolla.Connectiond.connectToType
    QMetaObject::invokeMethod(parent(), "connectToType", Q_ARG(QString, in0));
}

void ConnAdaptor::connectToService(const QString &in0)
{
    // handle method call com.jolla.Connectiond.connectToService
    QMetaObject::invokeMethod(parent(), "connectToService", Q_ARG(QString, in0));
}

void ConnAdaptor::sendConnectReply(const QString &in0, int in1)
{
    // handle method call com.jolla.Connectiond.sendConnectReply
    QMetaObject::invokeMethod(parent(), "sendConnectReply", Q_ARG(QString, in0), Q_ARG(int, in1));
}

void ConnAdaptor::sendUserReply(const QVariantMap &input)
{
    // handle method call com.jolla.Connectiond.sendUserReply
    QMetaObject::invokeMethod(parent(), "sendUserReply", Q_ARG(QVariantMap, input));
}

